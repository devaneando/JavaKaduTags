package com.kadu.frame;

import com.kadu.manager.ConfigurationManager;
import com.kadu.model.Directory;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

public class FraConfiguration extends javax.swing.JFrame
{

    private static final int TYPE_OK = 0;
    private static final int TYPE_WARNING = 1;
    private static final int TYPE_ERROR = 2;

    private ConfigurationManager configManager;

    public FraConfiguration() throws IOException
    {
        initComponents();
        this.loadData();
        this.jLabel1.setVisible(false);
        this.jLabel1.invalidate();

        ImageIcon icon = new ImageIcon("icons/32/add-folder.png");
        this.jButton1.setIcon(icon);

    }

    private void loadData()
    {
        try {
            this.configManager = new ConfigurationManager();
        } catch (IOException ex) {
            Logger.getLogger(FraConfiguration.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultListModel model = new DefaultListModel();
        for (Directory dir : this.configManager.getDirectories()) {
            model.addElement(dir.getPath());
        }
        this.jList1.setModel(model);
//
//        ImageIcon icon = new ImageIcon(getClass().getResource("/com/kadu/frame/icons/32/add-folder.png"));
//
//        jButton1.setIcon(icon);

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Add");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showDialog(this, "OK");

        if (JFileChooser.APPROVE_OPTION == returnVal) {
            try {
                ArrayList errors = this.configManager.addDirectory(chooser.getSelectedFile().getPath());
                if (errors.isEmpty()) {
                    this.updateMessage(TYPE_OK, "Directory added.");
                } else {
                    this.updateMessage(TYPE_WARNING, errors);
                }
            } catch (IOException ex) {
                Logger.getLogger(FraConfiguration.class.getName()).log(Level.SEVERE, null, ex);
                this.updateMessage(TYPE_ERROR, ex.getMessage());
            }
            this.loadData();
        } else {
            this.jLabel1.setVisible(false);
            this.jLabel1.invalidate();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateMessage(int type, String message)
    {
        Color color;
        switch (type) {
            case TYPE_OK:
                color = new Color(51, 204, 51);
                break;
            case TYPE_WARNING:
                color = new Color(255, 255, 26);
                break;
            case TYPE_ERROR:
            default:
                color = new Color(255, 102, 102);
                break;
        }

        this.jLabel1.setForeground(color);
        this.jLabel1.setText(message.trim());
        this.jLabel1.setVisible(true);
        this.jLabel1.invalidate();
    }

    private void updateMessage(int type, ArrayList<String> message)
    {
        Color color;
        switch (type) {
            case TYPE_OK:
                color = new Color(51, 204, 51);
                break;
            case TYPE_WARNING:
                color = new Color(194, 165, 38);
                break;
            case TYPE_ERROR:
            default:
                color = new Color(255, 102, 102);
                break;
        }

        this.jLabel1.setForeground(color);
        this.jLabel1.setText(String.join(System.lineSeparator(), message));
        this.jLabel1.setVisible(true);
        this.jLabel1.invalidate();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FraConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FraConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FraConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FraConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            private ConfigurationManager configManager;

            public void run()
            {
                try {
                    new FraConfiguration().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(FraConfiguration.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
